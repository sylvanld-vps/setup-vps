version: "3.4"

services:

  traefik:
    image: "traefik:v2.2"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - www
      - proxy
    ports:
      - 80:80
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"
      #- "traefik.http.routers.api.middlewares=auth"     
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "portainer_data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.port=9000"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=web"
    networks:
      - www
    depends_on:
      - traefik
    
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    
networks:
  www:
    external: true
  proxy:
    driver: overlay

volumes:
  portainer_data:
