version: "3.4"

services:

  traefik:
    image: "traefik:v2.2"
    command:
      - "--api.insecure=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - www
      - proxy
    ports:
      - 80:80
      - 443:443    
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.${SERVER_DOMAIN}`)"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:*"


  portainer:
    image: portainer/portainer
    command: --no-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "portainer_data:/data"
    networks:
      - www
    depends_on:
      - traefik
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${SERVER_DOMAIN}`)"
        - "traefik.http.routers.portainer.entrypoints=web"
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  keycloak:
    image: quay.io/keycloak/keycloak:12.0.4
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    networks:
      - www
    depends_on:
      - traefik
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
        - "traefik.http.routers.keycloak.rule=Host(`auth.${SERVER_DOMAIN}`)"
        - "traefik.http.routers.keycloak.entrypoints=web"
    
networks:
  www:
    driver: overlay
    external: true
  proxy:
    driver: overlay

volumes:
  portainer_data:
