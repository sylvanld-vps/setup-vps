# This is a basic workflow to help you get started with Actions

name: "Configure Swarm Manager"

# Controls when the action will run. 
on:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Initialize swarm cluster
        uses: sagebind/docker-swarm-deploy-action@v2
        with:
          remote_host: ssh://${{ secrets.VPS_DEPLOY_USER }}@${{ secrets.VPS_HOST_OR_IP }}
          ssh_private_key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.VPS_SSH_FINGERPRINT }}
          args: swarm init
          
      - name: Create www network
        uses: sagebind/docker-swarm-deploy-action@v2
        with:
          remote_host: ssh://${{ secrets.VPS_DEPLOY_USER }}@${{ secrets.VPS_HOST_OR_IP }}
          ssh_private_key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.VPS_SSH_FINGERPRINT }}
          args: network create www -d overlay
          
      - name: Deploy administration services
        uses: sagebind/docker-swarm-deploy-action@v2
        with:
          remote_host: ssh://${{ secrets.VPS_DEPLOY_USER }}@${{ secrets.VPS_HOST_OR_IP }}
          ssh_private_key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.VPS_SSH_FINGERPRINT }}
          args: stack deploy --compose-file services/administration.yml administration
