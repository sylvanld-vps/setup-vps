name: "Configure remote access"

on:
  workflow_dispatch:
    inputs:
      ssh_user_name:
        description: 'Name of the user that will be created for subsequent SSH key-based access'     
        required: true
        default: 'warning'
      ssh_user_password:
        description: 'Sudo password of the user that will be created'     
        required: true
      vps_root_user:
        description: 'Name of a user with root permissions used for initial VPS configuration'     
        required: true
        default: root
      vps_root_password:
        description: 'Password user with root permissions used for initial VPS configuration'     
        required: true
  
env:
  ORGANISATION_NAME: sylvanld-vps

jobs:
  ssh-key:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      
      - name: Generate a SSH key for GitHub actions
        id: generate-key
        run: |
          ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa_github -q -N ""
          ls ~/.ssh/
          private_key=$(cat ~/.ssh/id_rsa_github) && echo -e '::set-output name=PRIVATE_KEY::${private_key}'
          public_key=$(cat ~/.ssh/id_rsa_github.pub) && echo '::set-output name=PUBLIC_KEY::${public_key}'
          echo private: ${private_key}
          echo public: ${public_key}
          
      - name: Debug private key
        run: |
          echo ${{ steps.generate-key.outputs.PRIVATE_KEY }}
          echo ${{ steps.generate-key.outputs.PUBLIC_KEY }}
      
      - name: Install package that enable remote access over SSH with plain password (required at first time)
        if: success()
        run: sudo apt-get install -y sshpass
      
      - name: Copy SSH key on remote host
        if: success()
        run: sshpass -p ${{ secrets.VPS_ROOT_PASSWORD }} ssh-copy-id -o StrictHostKeyChecking=no -f -i ~/.ssh/id_rsa_github.pub ${{ secrets.VPS_ROOT_USERNAME }}@${{ secrets.VPS_DOMAIN_OR_IP}}

      - name: Save SSH public key as a secret for the current organization
        uses: hmanzur/actions-set-secret@v2.0.0
        if: success() 
        with:
          name: VPS_SSH_PUBLIC_KEY
          value: ${{ steps.generate-key.outputs.PUBLIC_KEY }}
          repository: ${{ env.ORGANISATION_NAME }}
          token: ${{ secrets.ORGANISATION_ACCESS_TOKEN }}
          org: true
          visibility: 'all'
          
      - name: Save SSH private key as a secret for the current organization
        uses: hmanzur/actions-set-secret@v2.0.0
        if: success() 
        with:
          name: VPS_SSH_PRIVATE_KEY
          value: ${{ steps.generate-key.outputs.PRIVATE_KEY }}
          repository: ${{ env.ORGANISATION_NAME }}
          token: ${{ secrets.ORGANISATION_ACCESS_TOKEN }}
          org: true
          visibility: 'all'
